{"version":3,"sources":["js/app.js"],"names":["testimonialId","navBarElement","document","querySelector","navBarSpan","querySelectorAll","animateOnViewPort","forEach","item","ScrollReveal","duration","reveal","delay","triggerSliderButton","automaticSLider","counter","testimonialElements","style","display","backgroundColor","setTimeout","screenButtonEffects","screensButton","sliderScreenImageCollection","screenButtonItem","sliderScreenImageElement","addEventListener","classList","remove","add","length","slideFirst","console","log","clearInterval","slideSecond","slideThird","firstSlideScreenButtonLeft","firstSlideScreenButtonRight","secondSlideScreenButtonLeft","secondSlideScreenButtonRight","secondCounter","screenSlider","determineCounter","index","elementCollection","elementCounter","window","pageYOffset","offsetTop","paddingTop","navLinkDropDownTrigger","getElementById","dropDownStatus","wordAssignValue","testimonialTriggers","triggerCounter","finalCalling"],"mappings":"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","file":"app.js","sourceRoot":"..","sourcesContent":["let navBarElement = document.querySelector(\".navbar\");\nlet navBarSpan = document.querySelectorAll(\".nav-link-span\");\n\n/**\n * To animate the div section on appearing on the vieport\n */\n// eslint-disable-next-line no-unused-vars\nconst animateOnViewPort = () => {\n    let mainSection = document.querySelectorAll(\".main__section\");\n    mainSection.forEach((item) => {\n        /**\n         * scroll reveal function imported from the script requested in the head tag\n         */\n        // eslint-disable-next-line no-undef\n        ScrollReveal({\n            duration: 1000\n        }).reveal(item, {\n            delay: 300\n        });\n    });\n}\n\n\n/**\n * Slider effect for the testimonial\n */\n\n\nlet testimonialId;\nlet triggerSliderButton = document.querySelectorAll(\".slider-trigger-button\");\nconst automaticSLider = (counter) => {\n    // console.log(counter)\n    let testimonialElements = document.querySelectorAll(\".slider__testimonial\");\n\n    testimonialElements.forEach(item => {\n        item.style.display = \"none\";\n    });\n    triggerSliderButton.forEach(item => {\n        item.style.backgroundColor = \"rgb(42, 14, 2)\";\n    })\n    testimonialElements[counter].style.display = \"flex\";\n    triggerSliderButton[counter].style.backgroundColor = \"#ffffff\";\n    counter = (counter <= 1) ? counter + 1 : 0;\n    testimonialId = setTimeout(() => {\n        automaticSLider(counter);\n    }, 3500);\n\n}\n\n/**\n * screen button clicked effect\n */\nconst screenButtonEffects = () => {\n    let screensButton = document.querySelectorAll(\".rounded__anchor-screens\");\n    let sliderScreenImageCollection = document.querySelectorAll(\".slider__screen-image\");\n    for (let screenButtonItem = 0; screenButtonItem < screensButton.length; screenButtonItem++) {\n        for (let sliderScreenImageElement = 0; sliderScreenImageElement < sliderScreenImageCollection.length; sliderScreenImageElement++) {\n            if (screenButtonItem == sliderScreenImageElement) {\n                screensButton[screenButtonItem].addEventListener(\"click\", () => {\n                    screensButton.forEach(item => {\n                        item.classList.remove(\"active-anchor\");\n                    })\n                    sliderScreenImageCollection.forEach((item) => {\n                        item.style.display = \"none\";\n                    })\n                    screensButton[screenButtonItem].classList.add(\"active-anchor\");\n                    sliderScreenImageCollection[sliderScreenImageElement].style.display = \"flex\";\n                });\n            }\n        }\n    }\n}\n\n// eslint-disable-next-line no-unused-vars\nfunction slideFirst() {\n    console.log(\"testimonial id : \", testimonialId);\n    clearInterval(testimonialId);\n\n    // console.log(\"slider first seen here\");\n    // console.log(\"testimonial id : \", testimonialId);\n    automaticSLider(0);\n}\n\n// eslint-disable-next-line no-unused-vars\nfunction slideSecond() {\n    clearInterval(testimonialId);\n    automaticSLider(1);\n    // console.log(\"Slider second seen here\");\n}\n\n// eslint-disable-next-line no-unused-vars\nfunction slideThird() {\n    clearInterval(testimonialId);\n    automaticSLider(2);\n    // console.log(\"Slider second third here\");\n}\n/**\n * Screen slider\n */\nlet firstSlideScreenButtonLeft = document.querySelector(\"#screenButtonLeft\");\nlet firstSlideScreenButtonRight = document.querySelector(\"#screenButtonRight\");\nlet secondSlideScreenButtonLeft = document.querySelector(\"#secondScreenButtonLeft\");\nlet secondSlideScreenButtonRight = document.querySelector(\"#secondScreenButtonRight\");\nlet counter = 0;\nlet secondCounter = 0;\nconst screenSlider = (determineCounter, index, elementCollection) => {\n    for (let elementCounter = 0; elementCounter < elementCollection.length; elementCounter++) {\n        elementCollection[elementCounter].style.display = \"none\";\n    }\n    console.log(elementCollection[index]);\n    if (index >= 0 && index < 2) {\n        elementCollection[index].style.display = \"flex\";\n        if (determineCounter == \"counter\") {\n            counter++;\n        } else {\n            secondCounter++\n        }\n    } else {\n        index = (index % 2 == 0) ? 0 : 1;\n        elementCollection[index].style.display = \"flex\";\n        if (determineCounter == \"counter\") {\n            counter = (counter % 2 == 0) ? 0 : 1;\n            counter++;\n        } else {\n            secondCounter = (secondCounter % 2 == 0) ? 0 : 1;\n            secondCounter++\n        }\n        counter++;\n    }\n\n\n}\n\n\n\n\n\nfirstSlideScreenButtonLeft.addEventListener(\"click\", () => {\n    let elementCollection = document.querySelectorAll(\".slider__slider-item--screens--first-section\");\n    screenSlider(\"counter\", counter - 1, elementCollection);\n});\n\nfirstSlideScreenButtonRight.addEventListener(\"click\", () => {\n    let elementCollection = document.querySelectorAll(\".slider__slider-item--screens--first-section\");\n    screenSlider(\"counter\", counter + 1, elementCollection);\n});\nsecondSlideScreenButtonLeft.addEventListener(\"click\", () => {\n    let elementCollection = document.querySelectorAll(\".slider__slider-item--screens--second-section\");\n    screenSlider(\"secondCounter\", secondCounter - 1, elementCollection);\n});\nsecondSlideScreenButtonRight.addEventListener(\"click\", () => {\n    let elementCollection = document.querySelectorAll(\".slider__slider-item--screens--second-section\");\n    screenSlider(\"secondCounter\", secondCounter + 1, elementCollection);\n})\n\n\nwindow.addEventListener(\"scroll\", () => {\n    if (window.pageYOffset > navBarElement.offsetTop) {\n        navBarElement.classList.add(\"navbar--sticky\");\n        navBarSpan.forEach((item) => {\n            item.classList.add(\"nav-link-span--backgroundColor\");\n        });\n        document.querySelector(\".header\").style.paddingTop = \"0px\";\n    } else {\n        navBarElement.classList.remove(\"navbar--sticky\");\n        navBarSpan.forEach((item) => {\n            item.classList.remove(\"nav-link-span--backgroundColor\");\n        });\n        document.querySelector(\".header\").style.paddingTop = \"40px\";\n        // console.log(\"no hello\")\n    }\n});\nwindow.addEventListener(\"load\", () => {\n    // animateOnViewPort();\n    automaticSLider(0);\n    screenButtonEffects();\n    let navLinkDropDownTrigger = document.getElementById(\"nav_link_trigger\");\n    let dropDownStatus = false;\n    navLinkDropDownTrigger.addEventListener(\"click\", () => {\n        if (dropDownStatus == false) {\n            document.querySelector(\".nav-links\").classList.add(\"link-animate\");\n            document.querySelector(\".nav-links\").style.display = \"flex\";\n            console.log(\"should effect\");\n        } else {\n            document.querySelector(\".nav-links\").classList.remove(\"link-animate\");\n            document.querySelector(\".nav-links\").classList.add(\"link-animate-close\");\n\n            setTimeout(() => {\n                document.querySelector(\".nav-links\").classList.remove(\"link-animate-close\");\n                document.querySelector(\".nav-links\").style.display = \"none\";\n\n            }, 900);\n\n        }\n        dropDownStatus = !dropDownStatus;\n    });\n    /**\n     * This is to concatenate string with the 'slide' word in order to reference the funtions with the string name\n     */\n    let wordAssignValue = {\n        0: \"First\",\n        1: \"Second\",\n        2: \"Third\"\n    }\n    let testimonialTriggers = document.querySelectorAll(\".slider-trigger-button\");\n    for (let triggerCounter = 0; triggerCounter < testimonialTriggers.length; triggerCounter++) {\n\n        testimonialTriggers[triggerCounter].addEventListener(\"click\", () => {\n            let callFunc = `slide` + wordAssignValue[triggerCounter];\n            // `${callFunc= `slide`+wordAssignValue[triggerCounter]}`;\n            let finalCalling = window[callFunc];\n            finalCalling();\n\n        })\n    }\n});"]}