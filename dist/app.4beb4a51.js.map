{"version":3,"sources":["js/app.js"],"names":["testimonialId","navBarElement","document","querySelector","navBarSpan","querySelectorAll","animateOnViewPort","triggerSliderButton","automaticSLider","counter","testimonialElements","forEach","item","style","display","backgroundColor","setTimeout","screenButtonEffects","screensButton","sliderScreenImageCollection","screenButtonItem","sliderScreenImageElement","addEventListener","classList","remove","add","length","slide","index","console","log","clearInterval","firstSlideScreenButtonLeft","firstSlideScreenButtonRight","secondSlideScreenButtonLeft","secondSlideScreenButtonRight","secondCounter","screenSlider","determineCounter","elementCollection","elementCounter","window","pageYOffset","offsetTop","paddingTop","navLinkDropDownTrigger","getElementById","navLinkContainer","navLinkELement","dropDownStatus","event","testimonialTriggers","triggerCounter"],"mappings":"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","file":"app.4beb4a51.js","sourceRoot":"..","sourcesContent":["let navBarElement = document.querySelector(\".navbar\");\nlet navBarSpan = document.querySelectorAll(\".nav-link-span\");\n\n/**\n * To animate the div section on appearing on the vieport\n */\n// eslint-disable-next-line no-unused-vars\nconst animateOnViewPort = () => {\n    let mainSection = document.querySelectorAll(\".main__section\");\n    // mainSection.forEach((item) => {\n    //     /**\n    //      * scroll reveal function imported from the script requested in the head tag\n    //      */\n    //     // eslint-disable-next-line no-undef\n    //     ScrollReveal({\n    //         duration: 1000\n    //     }).reveal(item, {\n    //         delay: 300\n    //     });\n    // });\n};\n\n/**\n * Slider effect for the testimonial\n */\n\nlet testimonialId;\nlet triggerSliderButton = document.querySelectorAll(\".slider-trigger-button\");\nconst automaticSLider = counter => {\n    // console.log(counter)\n    let testimonialElements = document.querySelectorAll(\".slider__testimonial\");\n\n    testimonialElements.forEach(item => {\n        item.style.display = \"none\";\n    });\n    triggerSliderButton.forEach(item => {\n        item.style.backgroundColor = \"rgb(0,0,0)\";\n    });\n    testimonialElements[counter].style.display = \"flex\";\n    triggerSliderButton[counter].style.backgroundColor = \"#ffffff\";\n    counter = counter <= 1 ? counter + 1 : 0;\n    testimonialId = setTimeout(() => {\n        automaticSLider(counter);\n    }, 3500);\n};\n\n/**\n * screen button clicked effect\n */\nconst screenButtonEffects = () => {\n    let screensButton = document.querySelectorAll(\".rounded__anchor-screens\");\n    let sliderScreenImageCollection = document.querySelectorAll(\n        \".slider__screen-image\"\n    );\n    for (\n        let screenButtonItem = 0; screenButtonItem < screensButton.length; screenButtonItem++\n    ) {\n        for (\n            let sliderScreenImageElement = 0; sliderScreenImageElement < sliderScreenImageCollection.length; sliderScreenImageElement++\n        ) {\n            if (screenButtonItem == sliderScreenImageElement) {\n                screensButton[screenButtonItem].addEventListener(\n                    \"click\",\n                    () => {\n                        screensButton.forEach(item => {\n                            item.classList.remove(\"active-anchor\");\n                        });\n                        sliderScreenImageCollection.forEach(item => {\n                            item.style.display = \"none\";\n                        });\n                        screensButton[screenButtonItem].classList.add(\n                            \"active-anchor\"\n                        );\n                        sliderScreenImageCollection[\n                            sliderScreenImageElement\n                        ].style.display = \"flex\";\n                    }\n                );\n            }\n        }\n    }\n};\n\n// eslint-disable-next-line no-unused-vars\nfunction slide(index) {\n    console.log(\"testimonial id : \", testimonialId);\n    clearInterval(testimonialId);\n    automaticSLider(index);\n}\n\n/**\n * Screen slider\n */\nlet firstSlideScreenButtonLeft = document.querySelector(\"#screenButtonLeft\");\nlet firstSlideScreenButtonRight = document.querySelector(\"#screenButtonRight\");\nlet secondSlideScreenButtonLeft = document.querySelector(\n    \"#secondScreenButtonLeft\"\n);\nlet secondSlideScreenButtonRight = document.querySelector(\n    \"#secondScreenButtonRight\"\n);\nlet counter = 0;\nlet secondCounter = 0;\nconst screenSlider = (determineCounter, index, elementCollection) => {\n    for (\n        let elementCounter = 0; elementCounter < elementCollection.length; elementCounter++\n    ) {\n        elementCollection[elementCounter].style.display = \"none\";\n    }\n    if (index >= 0 && index < 2) {\n        elementCollection[index].style.display = \"flex\";\n        if (determineCounter == \"counter\") {\n            counter++;\n        } else {\n            secondCounter++;\n        }\n    } else {\n        index = index % 2 == 0 ? 0 : 1;\n        console.log(\"Index else block : \", index);\n        elementCollection[index].style.display = \"flex\";\n        if (determineCounter == \"counter\") {\n            counter = counter % 2 == 0 ? 0 : 1;\n            counter++;\n        } else {\n            secondCounter = secondCounter % 2 == 0 ? 0 : 1;\n            secondCounter++;\n        }\n    }\n};\n\nfirstSlideScreenButtonLeft.addEventListener(\"click\", () => {\n    let elementCollection = document.querySelectorAll(\n        \".slider__slider-item--screens--first-section\"\n    );\n    screenSlider(\"counter\", counter - 1, elementCollection);\n});\n\nfirstSlideScreenButtonRight.addEventListener(\"click\", () => {\n    let elementCollection = document.querySelectorAll(\n        \".slider__slider-item--screens--first-section\"\n    );\n    screenSlider(\"counter\", counter + 1, elementCollection);\n});\nsecondSlideScreenButtonLeft.addEventListener(\"click\", () => {\n    let elementCollection = document.querySelectorAll(\n        \".slider__slider-item--screens--second-section\"\n    );\n    screenSlider(\"secondCounter\", secondCounter - 1, elementCollection);\n});\nsecondSlideScreenButtonRight.addEventListener(\"click\", () => {\n    let elementCollection = document.querySelectorAll(\n        \".slider__slider-item--screens--second-section\"\n    );\n    screenSlider(\"secondCounter\", secondCounter + 1, elementCollection);\n});\n\nwindow.addEventListener(\"scroll\", () => {\n    if (window.pageYOffset > navBarElement.offsetTop) {\n        navBarElement.classList.add(\"navbar--sticky\");\n        navBarSpan.forEach(item => {\n            item.classList.add(\"nav-link-span--backgroundColor\");\n        });\n        document.querySelector(\".header\").style.paddingTop = \"0px\";\n    } else {\n        navBarElement.classList.remove(\"navbar--sticky\");\n        navBarSpan.forEach(item => {\n            item.classList.remove(\"nav-link-span--backgroundColor\");\n        });\n        document.querySelector(\".header\").style.paddingTop = \"40px\";\n        // console.log(\"no hello\")\n    }\n});\nwindow.addEventListener(\"load\", () => {\n    animateOnViewPort();\n    automaticSLider(0);\n    screenButtonEffects();\n\n    let navLinkDropDownTrigger = document.getElementById(\"nav_link_trigger\");\n    const navLinkContainer = document.querySelector(\".nav-links\");\n    const navLinkELement = document.querySelectorAll(\n        \".nav-links .nav-links__div\"\n    );\n    let dropDownStatus = false;\n\n    navLinkDropDownTrigger.addEventListener(\"click\", () => {\n        if (dropDownStatus == false) {\n            navLinkContainer.classList.add(\"link-animate\");\n            navLinkContainer.style.display = \"flex\";\n            console.log(\"should effect\");\n        } else {\n            navLinkContainer.classList.remove(\"link-animate\");\n            navLinkContainer.classList.add(\"link-animate-close\");\n\n            setTimeout(() => {\n                navLinkContainer.classList.remove(\"link-animate-close\");\n                navLinkContainer.style.display = \"none\";\n            }, 900);\n        }\n        dropDownStatus = !dropDownStatus;\n        /**\n         * to close the nav container whenever on of the links is clicked for mobile view\n         */\n        navLinkELement.forEach(item => {\n            item.addEventListener(\"click\", event => {\n                dropDownStatus = false;\n                navLinkContainer.style.display = \"none\";\n            });\n        });\n    });\n    /**\n     * this stores the slidder button for the testimonials\n     */\n    let testimonialTriggers = document.querySelectorAll(\n        \".slider-trigger-button\"\n    );\n    /**\n     * to add event listener to each button\n     */\n    for (\n        let triggerCounter = 0; triggerCounter < testimonialTriggers.length; triggerCounter++\n    ) {\n        testimonialTriggers[triggerCounter].addEventListener(\"click\", () => {\n            slide(triggerCounter);\n        });\n    }\n});"]}