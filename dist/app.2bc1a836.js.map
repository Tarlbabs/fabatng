{"version":3,"sources":["js/app.js"],"names":["testimonialId","navBarElement","document","querySelector","navBarSpan","querySelectorAll","animateOnViewPort","forEach","item","ScrollReveal","duration","reveal","delay","triggerSliderButton","automaticSLider","counter","testimonialElements","style","display","backgroundColor","setTimeout","screenButtonEffects","screensButton","sliderScreenImageCollection","screenButtonItem","sliderScreenImageElement","addEventListener","classList","remove","add","length","slide","index","console","log","clearInterval","firstSlideScreenButtonLeft","firstSlideScreenButtonRight","secondSlideScreenButtonLeft","secondSlideScreenButtonRight","secondCounter","screenSlider","determineCounter","elementCollection","elementCounter","window","pageYOffset","offsetTop","paddingTop","navLinkDropDownTrigger","getElementById","dropDownStatus","testimonialTriggers","triggerCounter"],"mappings":"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","file":"app.2bc1a836.js","sourceRoot":"..","sourcesContent":["let navBarElement = document.querySelector(\".navbar\");\nlet navBarSpan = document.querySelectorAll(\".nav-link-span\");\n\n/**\n * To animate the div section on appearing on the vieport\n */\n// eslint-disable-next-line no-unused-vars\nconst animateOnViewPort = () => {\n    let mainSection = document.querySelectorAll(\".main__section\");\n    mainSection.forEach((item) => {\n        /**\n         * scroll reveal function imported from the script requested in the head tag\n         */\n        // eslint-disable-next-line no-undef\n        ScrollReveal({\n            duration: 1000\n        }).reveal(item, {\n            delay: 300\n        });\n    });\n}\n\n\n/**\n * Slider effect for the testimonial\n */\n\n\nlet testimonialId;\nlet triggerSliderButton = document.querySelectorAll(\".slider-trigger-button\");\nconst automaticSLider = (counter) => {\n    // console.log(counter)\n    let testimonialElements = document.querySelectorAll(\".slider__testimonial\");\n\n    testimonialElements.forEach(item => {\n        item.style.display = \"none\";\n    });\n    triggerSliderButton.forEach(item => {\n        item.style.backgroundColor = \"rgb(42, 14, 2)\";\n    });\n    testimonialElements[counter].style.display = \"flex\";\n    triggerSliderButton[counter].style.backgroundColor = \"#ffffff\";\n    counter = (counter <= 1) ? counter + 1 : 0;\n    testimonialId = setTimeout(() => {\n        automaticSLider(counter);\n    }, 3500);\n\n}\n\n/**\n * screen button clicked effect\n */\nconst screenButtonEffects = () => {\n    let screensButton = document.querySelectorAll(\".rounded__anchor-screens\");\n    let sliderScreenImageCollection = document.querySelectorAll(\".slider__screen-image\");\n    for (let screenButtonItem = 0; screenButtonItem < screensButton.length; screenButtonItem++) {\n        for (let sliderScreenImageElement = 0; sliderScreenImageElement < sliderScreenImageCollection.length; sliderScreenImageElement++) {\n            if (screenButtonItem == sliderScreenImageElement) {\n                screensButton[screenButtonItem].addEventListener(\"click\", () => {\n                    screensButton.forEach(item => {\n                        item.classList.remove(\"active-anchor\");\n                    })\n                    sliderScreenImageCollection.forEach((item) => {\n                        item.style.display = \"none\";\n                    })\n                    screensButton[screenButtonItem].classList.add(\"active-anchor\");\n                    sliderScreenImageCollection[sliderScreenImageElement].style.display = \"flex\";\n                });\n            }\n        }\n    }\n}\n\n// eslint-disable-next-line no-unused-vars\nfunction slide(index) {\n    console.log(\"testimonial id : \", testimonialId);\n    clearInterval(testimonialId);\n    automaticSLider(index);\n}\n\n/**\n * Screen slider\n */\nlet firstSlideScreenButtonLeft = document.querySelector(\"#screenButtonLeft\");\nlet firstSlideScreenButtonRight = document.querySelector(\"#screenButtonRight\");\nlet secondSlideScreenButtonLeft = document.querySelector(\"#secondScreenButtonLeft\");\nlet secondSlideScreenButtonRight = document.querySelector(\"#secondScreenButtonRight\");\nlet counter = 0;\nlet secondCounter = 0;\nconst screenSlider = (determineCounter, index, elementCollection) => {\n    for (let elementCounter = 0; elementCounter < elementCollection.length; elementCounter++) {\n        elementCollection[elementCounter].style.display = \"none\";\n    }\n    console.log(\"index : \", index);\n    if (index >= 0 && index < 2) {\n        elementCollection[index].style.display = \"flex\";\n        if (determineCounter == \"counter\") {\n            counter++;\n        } else {\n            secondCounter++\n        }\n    } else {\n        index = (index % 2 == 0) ? 0 : 1;\n        console.log(\"Index else block : \", index);\n        elementCollection[index].style.display = \"flex\";\n        if (determineCounter == \"counter\") {\n            counter = (counter % 2 == 0) ? 0 : 1;\n            counter++;\n        } else {\n            secondCounter = (secondCounter % 2 == 0) ? 0 : 1;\n            secondCounter++\n        }\n    }\n}\n\n\n\n\n\nfirstSlideScreenButtonLeft.addEventListener(\"click\", () => {\n    let elementCollection = document.querySelectorAll(\".slider__slider-item--screens--first-section\");\n    screenSlider(\"counter\", counter - 1, elementCollection);\n});\n\nfirstSlideScreenButtonRight.addEventListener(\"click\", () => {\n    let elementCollection = document.querySelectorAll(\".slider__slider-item--screens--first-section\");\n    screenSlider(\"counter\", counter + 1, elementCollection);\n});\nsecondSlideScreenButtonLeft.addEventListener(\"click\", () => {\n    let elementCollection = document.querySelectorAll(\".slider__slider-item--screens--second-section\");\n    screenSlider(\"secondCounter\", secondCounter - 1, elementCollection);\n});\nsecondSlideScreenButtonRight.addEventListener(\"click\", () => {\n    let elementCollection = document.querySelectorAll(\".slider__slider-item--screens--second-section\");\n    screenSlider(\"secondCounter\", secondCounter + 1, elementCollection);\n})\n\n\nwindow.addEventListener(\"scroll\", () => {\n    if (window.pageYOffset > navBarElement.offsetTop) {\n        navBarElement.classList.add(\"navbar--sticky\");\n        navBarSpan.forEach((item) => {\n            item.classList.add(\"nav-link-span--backgroundColor\");\n        });\n        document.querySelector(\".header\").style.paddingTop = \"0px\";\n    } else {\n        navBarElement.classList.remove(\"navbar--sticky\");\n        navBarSpan.forEach((item) => {\n            item.classList.remove(\"nav-link-span--backgroundColor\");\n        });\n        document.querySelector(\".header\").style.paddingTop = \"40px\";\n        // console.log(\"no hello\")\n    }\n});\nwindow.addEventListener(\"load\", () => {\n    animateOnViewPort();\n    automaticSLider(0);\n    screenButtonEffects();\n    let navLinkDropDownTrigger = document.getElementById(\"nav_link_trigger\");\n    let dropDownStatus = false;\n    navLinkDropDownTrigger.addEventListener(\"click\", () => {\n        if (dropDownStatus == false) {\n            document.querySelector(\".nav-links\").classList.add(\"link-animate\");\n            document.querySelector(\".nav-links\").style.display = \"flex\";\n            console.log(\"should effect\");\n        } else {\n            document.querySelector(\".nav-links\").classList.remove(\"link-animate\");\n            document.querySelector(\".nav-links\").classList.add(\"link-animate-close\");\n\n            setTimeout(() => {\n                document.querySelector(\".nav-links\").classList.remove(\"link-animate-close\");\n                document.querySelector(\".nav-links\").style.display = \"none\";\n\n            }, 900);\n\n        }\n        dropDownStatus = !dropDownStatus;\n    });\n    /**\n     * this stores the slidder button for the testimonials\n     */\n    let testimonialTriggers = document.querySelectorAll(\".slider-trigger-button\");\n    /**\n     * to add event listener to each button\n     */\n    for (let triggerCounter = 0; triggerCounter < testimonialTriggers.length; triggerCounter++) {\n\n        testimonialTriggers[triggerCounter].addEventListener(\"click\", () => {\n            slide(triggerCounter);\n\n        })\n    }\n});"]}